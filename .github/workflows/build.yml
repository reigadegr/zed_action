name: Build

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # Optimize build performance
  CARGO_INCREMENTAL: 0
  TZ: Asia/Shanghai

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2022]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Enable long paths in git
        if: matrix.os == 'windows-2022'
        run: |
          git config --system core.longpaths true

      - name: Enable long paths in windows
        if: matrix.os == 'windows-2022'
        shell: powershell
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" `
            -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force

      - name: Checkout self
        uses: actions/checkout@v4

      - name: Checkout zed
        uses: actions/checkout@v4
        with:
          repository: zed-industries/zed
          ref: refs/tags/v0.201.9
          path: zed

      # - name: Setup zed code
        # shell: bash
        # run: |
          # git clone --depth 1 https://github.com/zed-industries/zed

      - name: Copy config file
        shell: bash
        run: |
          cp -af .cargo/config.toml zed/.cargo/

      - name: Install system dependencies (Ubuntu)
        if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@latest 
        with: 
          packages: musl-tools build-essential lld llvm clang libdbus-1-dev libwayland-dev libwebkit2gtk-4.1-dev libxdo-dev pkg-config libssl-dev libx11-dev libasound2-dev libx11-xcb-dev libxkbcommon-dev libxkbcommon-x11-dev
          execute_install_scripts: true

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          target: wasm32-wasip1

      # - name: Setup rust toolchains
        # shell: bash
        # run: |
          # curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain nightly --profile minimal -y
          # export toolchain="nightly"
          # rustup default "$toolchain"
          # rustup component add rust-src llvm-tools-preview clippy rustfmt
          # rustup update

      # - name: Rust Cache
        # uses: Swatinem/rust-cache@v2
        # with:
          # key: ${{ matrix.os }}-${{ hashFiles('Cargo.lock') }}
          # workspaces: "zed -> target"

      - name: Build
        working-directory: zed
        run: |
          toolchain="nightly"
          platform="${{ contains(runner.os, 'Windows') && 'windows' || (contains(runner.os, 'apple') && 'apple' || 'linux') }}"
          file="build_"$toolchain"_"$platform".sh"
          url="https://github.com/reigadegr/zed_action/raw/main/$file"
          echo "脚本直链: $url"
          curl -L $url -o "$file"
          cat "$file"; ls -al
          bin_name="zed"
          if [ "$platform" = "windows" ]; then
              sh "$file" "x86_64-pc-windows-msvc" "$bin_name"
          fi

          if [ "$platform" = "linux" ]; then
              sh "$file" "x86_64-unknown-linux-gnu" "$bin_name"
          fi

          is_windows="${{ contains(github.event.inputs.TARGET, 'windows') && 'true' || 'false' }}"
          if [ "$is_windows" = "true" ]; then
              bin_name=$bin_name.exe
          fi
          file="$(find target -name "$bin_name")"
          echo "$(realpath $file)"

      - name: Archive windows build
        uses: actions/upload-artifact@v4
        with:
          name: zed-${{ matrix.os }}
          path: |
            zed/target/release/zed
            zed/target/release/zed.exe
